Updated Database Creation
CREATE DATABASE userdb;
USE userdb;

CREATE TABLE customers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(50) NOT NULL
);

CREATE TABLE staff (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(50) NOT NULL
);

INSERT INTO customers (username, password) VALUES ('minjii', '123');
INSERT INTO staff (username, password) VALUES ('hanni', '456');

CREATE TABLE orders (
    id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT,  -- Grouping multiple items under the same order
    product_name VARCHAR(100),
    quantity INT,
    price_each DECIMAL(10,2),  -- Price per unit/item total
    total DECIMAL(10,2),       -- Total for the whole order (duplicated per row for ease)
    method VARCHAR(50)
);

CREATE TABLE BakeryProducts (
    ProductID INT PRIMARY KEY AUTO_INCREMENT,
    ProductName VARCHAR(100) NOT NULL,
    Category VARCHAR(50) NOT NULL,
    Price DECIMAL(8,2) NOT NULL,
    CreatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ProductStocks (
    StockID INT PRIMARY KEY AUTO_INCREMENT,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    OrderDate DATE NOT NULL,
    LastUpdate TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (ProductID) REFERENCES BakeryProducts(ProductID)
);

CREATE TABLE ShoppingCart (
    CartItemID INT PRIMARY KEY AUTO_INCREMENT,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    ItemPrice DECIMAL(8,2) NOT NULL,
    Subtotal DECIMAL(10,2) GENERATED ALWAYS AS (Quantity * ItemPrice) STORED,
    FOREIGN KEY (ProductID) REFERENCES BakeryProducts(ProductID)
);

CREATE TABLE StaffOrders (
    OrderID INT PRIMARY KEY AUTO_INCREMENT,
    OrderDate DATE NOT NULL,
    TotalCost DECIMAL(10,2) NOT NULL,
    Status ENUM('Ordering', 'Received') DEFAULT 'Ordering',
);

CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY AUTO_INCREMENT,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    ItemPrice DECIMAL(8,2) NOT NULL,
    Subtotal DECIMAL(10,2) GENERATED ALWAYS AS (Quantity * ItemPrice) STORED,
    FOREIGN KEY (OrderID) REFERENCES orders(id),
    FOREIGN KEY (ProductID) REFERENCES BakeryProducts(ProductID)
);